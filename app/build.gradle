project.ext.set("archivesBaseName", "OpenIndic");

apply plugin: 'com.android.application'

dependencies {
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation project(':ime')
}

Properties localProps = new Properties()
File localPropsFile = project.rootProject.file('local.properties')
if (localPropsFile.exists()) {
	localProps.load(localPropsFile.newDataInputStream())
}

android {
    compileSdkVersion 28
    buildToolsVersion '29.0.2'
	ndkVersion "21.3.6528147"

    defaultConfig {
        applicationId "org.openindic"
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 10
        versionName "r1"
    }

    splits {
      abi {
        enable true
        universalApk false
        include "armeabi-v7a", "arm64-v8a"
        exclude "x86", "x86_64"
      }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['../java-overridable/src', 'src', '../common/src', '../inputmethodcommon/java']
            jniLibs.srcDirs = ['jniLibs']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        androidTest.setRoot('tests')
    }

    aaptOptions {
        noCompress ".dict"
    }

	signingConfigs {
		release {
			storeFile file(localProps.getProperty("storeFile"))
			storePassword localProps.getProperty("storePass")
			keyAlias localProps.getProperty("keyAlias")
			keyPassword localProps.getProperty("keyPass")
		}
	}
	
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }
	
    flavorDimensions "version"
    productFlavors {
        snapshot {
            applicationIdSuffix ".snapshot"
            versionNameSuffix "-SNAPSHOT"
        }
    }

/*    externalNativeBuild {
        ndkBuild {
            path 'native/jni/Android.mk'
        }
    } */

    lintOptions {
        checkReleaseBuilds false
    }

    android.applicationVariants.all { variant ->
      variant.outputs.eachWithIndex { output, outputIndex ->
        output.versionCodeOverride = variant.versionCode - outputIndex
      }
    }
}
